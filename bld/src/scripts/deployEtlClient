#!/bin/bash
# i2, i2 Group, the i2 Group logo, and i2group.com are trademarks of N.Harris Computer Corporation.
# Â© N.Harris Computer Corporation (2022-2023)
#
# SPDX short identifier: MIT

#####################################################################################
#                                                                                   #
#  Script to set up the etl_client for use and to ingest example data.              #
#                                                                                   #
#  Usage : deployEtlClient                                                          #
#                                                                                   #
#####################################################################################

set -e

. utils/variables

pushd ..

. ${UTILS_PATH}/functions

dbDialect=${1:-${DB_DIALECT}}

if [[ $dbDialect != "sqlserver" &&  $dbDialect != "db2" &&  $dbDialect != "postgres" ]]; then
    echo "Error: Unrecognized dialect."
    exit 1
fi

output "Removing old etltoolkit from etl_client and admin_client if exists"
docker exec -u i2analyze etl_client rm -Rf /opt/i2/i2analyze/etltoolkit
docker exec -u i2analyze admin_client rm -Rf /opt/i2/i2analyze/etltoolkit

output "Creating an etltoolkit and moving it to the etl_client container"
docker exec -u i2analyze admin_client /opt/i2/i2analyze/toolkit/scripts/setup -t createEtlToolkit -p outputPath='/opt/i2/i2analyze'

rm -rf etltoolkit &>/dev/null || true
docker cp admin_client:/opt/i2/i2analyze/etltoolkit ./
docker exec -u i2analyze admin_client rm -Rf /opt/i2/i2analyze/etltoolkit

docker cp ./etltoolkit etl_client:/opt/i2/i2analyze/etltoolkit
rm -rf etltoolkit &>/dev/null || true

if [[ $dbDialect == "sqlserver" || $dbDialect == "postgres" ]]; then
    docker exec -u root etl_client chown -R i2analyze:i2analyze /opt/i2/i2analyze/
else
    docker exec -u root etl_client chown -R i2analyze:db2iusr1 /opt/i2/i2analyze/
fi

popd
