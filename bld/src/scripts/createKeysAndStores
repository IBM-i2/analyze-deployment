#!/bin/bash
# i2, i2 Group, the i2 Group logo, and i2group.com are trademarks of N.Harris Computer Corporation.
# Â© N.Harris Computer Corporation (2022-2023)
#
# SPDX short identifier: MIT

#####################################################################################
#                                                                                   #
#  Script to create the stores, private keys, and certificates for a                #
#  secure deployment. The stores are populated with signed certificate.             #
#                                                                                   #
#  Usage : createKeysAndStores [<dbDialect>]                                        #
#  Defaults to current database dialect                                             #
#                                                                                   #
#####################################################################################

. utils/variables

pushd ..

. ${UTILS_PATH}/functions

dbDialect=${1:-${DB_DIALECT}}

output "Removing the certificate authority container, if it exists"
docker rm -f ca &>/dev/null || true

output "Removing any previous keys, if they exist"
rm -rf ${SRC_DIR}/keys &>/dev/null || true

output "Creating CA Certificate"
. ${SSL_SCRIPTS_PATH}/createCACert

output "Building the ca_image"
docker build -t ca_image ${IMAGES_PATH}/common/ca

output "Running the certificate authority container"
docker run -d --name ca ca_image

output "Enter the SSL password"
read -s -p "Password: " SSL_PASSWORD
while [[ ${#SSL_PASSWORD} -lt 6 ]]
do
  echo "Length of password must be at least 6 characters long. Try again..."
  read -s -p "Password: " SSL_PASSWORD
done

header "Creating and signing the keys and certificates"
. ${SSL_SCRIPTS_PATH}/createSigningRequests $dbDialect $SSL_PASSWORD
. ${SSL_SCRIPTS_PATH}/signRequests $dbDialect $SSL_PASSWORD
. ${SSL_SCRIPTS_PATH}/applyResponses $dbDialect $SSL_PASSWORD

popd
