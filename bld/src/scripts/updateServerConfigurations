#!/bin/bash
# i2, i2 Group, the i2 Group logo, and i2group.com are trademarks of N.Harris Computer Corporation.
# Â© N.Harris Computer Corporation (2022-2023)
#
# SPDX short identifier: MIT

#####################################################################################
#                                                                                   #
#  Script to update the configuration on all containers.                            #
#                                                                                   #
#  Usage : updateServerConfigurations <configModsName> [<dbDialect>]                #
#  Defaults to current database dialect                                             #
#                                                                                   #
#####################################################################################

. utils/variables

pushd ..

. ${UTILS_PATH}/functions

configModsName=$1
dbDialect=${2:-${DB_DIALECT}}

I2ANALYZE_PATH="/opt/i2/i2analyze"
docker exec -t -u i2analyze admin_client sh -c "test -d ${I2ANALYZE_PATH}" || I2ANALYZE_PATH="/opt/IBM/i2analyze" && true

if [[ $dbDialect != "sqlserver" &&  $dbDialect != "db2" &&  $dbDialect != "postgres" ]]; then
    echo "Error: Unrecognized dialect."
    exit 1
fi

if [[ -z "$configModsName" ]]; then
    echo "Error: Configuration not specified."
    exit 1
fi

if [[ ! -d "${CONFIG_MODS_PATH}/${dbDialect}/$configModsName" ]]; then
    echo "Error: Specified configuration $configModsName does not exist."
    exit 1
fi

#Copy base configuration
pushd ${SCRIPTS_PATH}
. copyConfiguration $dbDialect
popd

#Copy Modifications to folders
cp -r "${CONFIG_MODS_PATH}/${dbDialect}/${configModsName}/." ${IMAGES_PATH}/common/zookeeper/configuration
cp -r "${CONFIG_MODS_PATH}/${dbDialect}/${configModsName}/." ${IMAGES_PATH}/common/zookeeper2/configuration
cp -r "${CONFIG_MODS_PATH}/${dbDialect}/${configModsName}/." ${IMAGES_PATH}/common/zookeeper3/configuration
cp -r "${CONFIG_MODS_PATH}/${dbDialect}/${configModsName}/." ${IMAGES_PATH}/common/solr/configuration
cp -r "${CONFIG_MODS_PATH}/${dbDialect}/${configModsName}/." ${IMAGES_PATH}/common/solr2/configuration
cp -r "${CONFIG_MODS_PATH}/${dbDialect}/${configModsName}/." ${IMAGES_PATH}/common/ihs/configuration

cp -r "${CONFIG_MODS_PATH}/${dbDialect}/${configModsName}/." ${IMAGES_PATH}/${dbDialect}/liberty/configuration
cp -r "${CONFIG_MODS_PATH}/${dbDialect}/${configModsName}/." ${IMAGES_PATH}/${dbDialect}/admin_client/configuration

output "Copy the configuration to each container"
#Copy Modifications
docker cp "${IMAGES_PATH}/${dbDialect}/admin_client/configuration/." admin_client:${I2ANALYZE_PATH}/toolkit/configuration
docker cp "${IMAGES_PATH}/${dbDialect}/liberty/configuration/." liberty:${I2ANALYZE_PATH}/toolkit/configuration

docker cp "${IMAGES_PATH}/common/zookeeper/configuration/." zookeeper:${I2ANALYZE_PATH}/toolkit/configuration
docker cp "${IMAGES_PATH}/common/zookeeper2/configuration/." zookeeper2:${I2ANALYZE_PATH}/toolkit/configuration
docker cp "${IMAGES_PATH}/common/zookeeper3/configuration/." zookeeper3:${I2ANALYZE_PATH}/toolkit/configuration
docker cp "${IMAGES_PATH}/common/solr/configuration/." solr:${I2ANALYZE_PATH}/toolkit/configuration
docker cp "${IMAGES_PATH}/common/solr2/configuration/." solr2:${I2ANALYZE_PATH}/toolkit/configuration

#Change the ownership of the copied files
docker exec -u root admin_client chown -R i2analyze:i2analyze ${I2ANALYZE_PATH}/toolkit/configuration
docker exec -u root liberty chown -R i2analyze:i2analyze ${I2ANALYZE_PATH}/toolkit/configuration
docker exec -u root zookeeper chown -R i2analyze:i2analyze ${I2ANALYZE_PATH}/toolkit/configuration
docker exec -u root zookeeper2 chown -R i2analyze:i2analyze ${I2ANALYZE_PATH}/toolkit/configuration
docker exec -u root zookeeper3 chown -R i2analyze:i2analyze ${I2ANALYZE_PATH}/toolkit/configuration
docker exec -u root solr chown -R i2analyze:i2analyze ${I2ANALYZE_PATH}/toolkit/configuration
docker exec -u root solr2 chown -R i2analyze:i2analyze ${I2ANALYZE_PATH}/toolkit/configuration

# If HTTP Server exists then reset the configuration
contExists="$(containerExists ihs)"
if [[ "$contExists" -eq 1 ]]; then
    docker cp "${IMAGES_PATH}/common/ihs/configuration/." ihs:${I2ANALYZE_PATH}/toolkit/configuration
    docker exec -u root ihs chown -R i2analyze:i2analyze ${I2ANALYZE_PATH}/toolkit/configuration
fi

popd
