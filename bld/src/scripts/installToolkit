#!/bin/bash
# i2, i2 Group, the i2 Group logo, and i2group.com are trademarks of N.Harris Computer Corporation.
# Â© N.Harris Computer Corporation (2022-2023)
#
# SPDX short identifier: MIT

#####################################################################################
#                                                                                   #
#  Script to remove the previous version of the toolkit and installs the new        #
#  toolkit. This scripts assumes the original configuration has been backed up,     #
#  as it overrides any files in the configuration folder.                           #
#                                                                                   #
#  Usage : installToolkit <toolkitPath>                                             #
#                                                                                   #
#####################################################################################

set -e

. utils/variables

pushd ..

. ${UTILS_PATH}/functions

echo "Are you sure you want to install a new toolkit? This removes your current installation. Make sure to backup your configuration before you continue."
while true; do
    read -p "Continue Y/N?" yn
    case $yn in
        [Yy]* ) break;;
        [Nn]* ) exit 0;;
        * ) echo "Please answer Y (yes) or N (no).";;
    esac
done

if [ -z "1" ]; then
    echo "Error: Toolkit file not specified."
    exit 1
fi

if [ ! -f "$1" ]; then
    echo "Error: Specified toolkit file $1 does not exist."
    exit 1
fi


function removeOldToolkitFromContainer
{
    echo ""
    echo "############################################################"
    echo "Removing previous toolkit from $1 container"
    docker exec -u i2analyze $1 sh -c "rm -Rf /opt/i2/i2analyze/toolkit &>/dev/null || true"
}

function installNewDependencies
{
    echo ""
    echo "############################################################"
    echo "Installing new dependencies to $1 container"
    if [[ $1 == "liberty" ]]; then
	    docker exec -u root $1 apt-get install -y net-tools
    fi
    if [[ ${DB_DIALECT} == "postgres" ]]; then
        docker exec -u root $1 apt-get install -y libarchive-tools
    fi
    echo ""
}

function copyAndExtractToolkit
{
    echo ""
    echo "############################################################"
    echo "Copying the toolkit to $1 container"
    docker cp $2 $1:/opt/i2/i2analyze.tar.gz
    echo "Changing the permissions on the toolkit tar.gz before extracting it"
    docker exec -u root $1 chown i2analyze:i2analyze /opt/i2/i2analyze.tar.gz
    echo "Extracting the toolkit tar.gz"
    #Don't extract license file
    docker exec -u i2analyze $1 bsdtar -xpf /opt/i2/i2analyze.tar.gz -C /opt/i2/i2analyze --exclude='*license_acknowledgment.txt'
    docker exec -u root $1 rm -f /opt/i2/i2analyze.tar.gz
    echo ""
}

output "Remove the previous toolkit from the containers"
removeOldToolkitFromContainer admin_client
removeOldToolkitFromContainer zookeeper
removeOldToolkitFromContainer zookeeper2
removeOldToolkitFromContainer zookeeper3
removeOldToolkitFromContainer solr
removeOldToolkitFromContainer solr2
removeOldToolkitFromContainer liberty
if [ "$(docker ps -q -f name=ihs)" ]; then
  removeOldToolkitFromContainer ihs
fi

output "Install new dependencies required by the new toolkit to the containers"
installNewDependencies liberty
installNewDependencies admin_client
installNewDependencies etl_client

output "Copy and extract the toolkit to the containers"
copyAndExtractToolkit admin_client $1
copyAndExtractToolkit zookeeper $1
copyAndExtractToolkit zookeeper2 $1
copyAndExtractToolkit zookeeper3 $1
copyAndExtractToolkit solr $1
copyAndExtractToolkit solr2 $1
copyAndExtractToolkit liberty $1

if [ "$(docker ps -q -f name=ihs)" ]; then
  copyAndExtractToolkit ihs $1
fi

popd
