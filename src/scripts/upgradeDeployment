#!/bin/bash
# i2, i2 Group, the i2 Group logo, and i2group.com are trademarks of N.Harris Computer Corporation.
# Â© N.Harris Computer Corporation (2022-2023)
#
# SPDX short identifier: MIT

#####################################################################################
#                                                                                   #
#  Script to upgrade a distributed deployment of i2 Analyze.                        #
#  Ensure that your containers already have the new version of the toolkit          #
#  installed and that you have copied your previous configuration to the containers.#
#                                                                                   #
#  Usage : upgradeDeployment [<dbDialect>]                                          #
#  Defaults to current dialect                                                      #
#                                                                                   #
#####################################################################################

set -e

. utils/variables

pushd ..

. ${UTILS_PATH}/functions
dbDialect=${1:-${DB_DIALECT}}

I2ANALYZE_PATH="/opt/i2/i2analyze"
docker exec -t -u i2analyze admin_client sh -c "test -d ${I2ANALYZE_PATH}" || I2ANALYZE_PATH="/opt/IBM/i2analyze" && true

postgres_cer="/opt/i2/keys/responses/postgres-key.cer"
if [ "$(docker ps -q -f name=etl_client)" ] && [[ "${dbDialect}" == "postgres" ]] && docker exec -t -u i2analyze admin_client sh -c "test -f ${postgres_cer}" ; then
    echo "Adding the postgres signed certificate to the etl container"
    docker cp admin_client:${postgres_cer} /tmp/postgres-key.cer
    docker exec -u root -i etl_client mkdir -p /opt/i2/keys/responses/
    docker cp /tmp/postgres-key.cer etl_client:${postgres_cer}
    rm /tmp/postgres-key.cer
fi

echo "Upgrade jdbc drivers on admin_client"
docker exec -u root admin_client rm -rf ${I2ANALYZE_PATH}/toolkit/configuration/environment/common/jdbc-drivers
docker cp ${DEFAULT_CONFIG_PATH}/environment/common/jdbc-drivers admin_client:${I2ANALYZE_PATH}/toolkit/configuration/environment/common

output "Upgrading the previous configuration"
docker exec -t -u i2analyze admin_client ${I2ANALYZE_PATH}/toolkit/scripts/setup -t upgradeConfiguration

output "Copying the upgraded configuration from the admin_client container to your local machine"
rm -rf ${CONFIG_MODS_PATH}/${dbDialect}/configuration_upgraded &>/dev/null || true
docker cp admin_client:${I2ANALYZE_PATH}/toolkit/configuration ${CONFIG_MODS_PATH}/${dbDialect}/configuration_upgraded

output "Copying the upgraded configuration to each container"

pushd ${SCRIPTS_PATH}
. updateServerConfigurations configuration_upgraded ${dbDialect}
popd

output "Upgrading Zookeeper"
docker exec -u i2analyze zookeeper ${I2ANALYZE_PATH}/toolkit/scripts/setup -t upgradeZookeeper --hostname zookeeper.eianet
docker exec -u i2analyze zookeeper2 ${I2ANALYZE_PATH}/toolkit/scripts/setup -t upgradeZookeeper --hostname zookeeper2.eianet
docker exec -u i2analyze zookeeper3 ${I2ANALYZE_PATH}/toolkit/scripts/setup -t upgradeZookeeper --hostname zookeeper3.eianet

output "Upgrading Solr"
docker exec -u i2analyze solr ${I2ANALYZE_PATH}/toolkit/scripts/setup -t upgradeSolr --hostname solr.eianet
docker exec -u i2analyze solr2 ${I2ANALYZE_PATH}/toolkit/scripts/setup -t upgradeSolr --hostname solr2.eianet

output "Upgrading the Information Store database"
docker exec -u i2analyze admin_client ${I2ANALYZE_PATH}/toolkit/scripts/setup -t upgradeDatabases --hostname admin_client.eianet

output "Starting ZooKeeper and uploading new configuration"
docker exec -u i2analyze zookeeper ${I2ANALYZE_PATH}/toolkit/scripts/setup -t startZkHosts --hostname zookeeper.eianet
docker exec -u i2analyze zookeeper2 ${I2ANALYZE_PATH}/toolkit/scripts/setup -t startZkHosts --hostname zookeeper2.eianet
docker exec -u i2analyze zookeeper3 ${I2ANALYZE_PATH}/toolkit/scripts/setup -t startZkHosts --hostname zookeeper3.eianet
docker exec -u i2analyze admin_client ${I2ANALYZE_PATH}/toolkit/scripts/setup -t createAndUploadSolrConfig --hostname admin_client.eianet

output "Starting Solr"
docker exec -u i2analyze solr ${I2ANALYZE_PATH}/toolkit/scripts/setup -t startSolr --hostname solr.eianet
docker exec -u i2analyze solr2 ${I2ANALYZE_PATH}/toolkit/scripts/setup -t startSolr --hostname solr2.eianet

output "Upgrading Liberty"
docker exec -t -u i2analyze liberty ${I2ANALYZE_PATH}/toolkit/scripts/setup -t upgradeLiberty

output "Upgrading the Solr collection"
docker exec -u i2analyze admin_client ${I2ANALYZE_PATH}/toolkit/scripts/setup -t upgradeSolrCollections --hostname admin_client.eianet
# This is commented out due to the requirement of it being run from liberty container introduced in 4.4.3 release.
# docker exec -u i2analyze admin_client ${I2ANALYZE_PATH}/toolkit/scripts/setup -t upgradeAllSolrIndexes --hostname admin_client.eianet
# docker exec -u i2analyze admin_client ${I2ANALYZE_PATH}/toolkit/scripts/setup -t switchStandbyMatchIndexToLive --hostname admin_client.eianet

output "Starting Liberty"
docker exec -u i2analyze liberty ${I2ANALYZE_PATH}/toolkit/scripts/setup -t startLiberty

popd
