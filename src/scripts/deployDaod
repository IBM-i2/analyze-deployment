#!/bin/bash
# i2, i2 Group, the i2 Group logo, and i2group.com are trademarks of N.Harris Computer Corporation.
# Â© N.Harris Computer Corporation (2022)
#
# SPDX short identifier: MIT

#####################################################################################
#                                                                                   #
#  Script to set up i2 Connect for use with i2 Analyze.                             #
#                                                                                   #
#  Usage : deployDaod [<configModsName>] [<dbDialect>]                              #
#  Defaults to i2connect configuration directory                                    #
#  Defaults to current database dialect                                             #
#                                                                                   #
#####################################################################################

set -e

. utils/variables

pushd ..

. ${UTILS_PATH}/functions

configModsName=${1:-i2connect}

if [[ $configModsName != "i2connect" &&  $configModsName != "i2connect_istore" ]]; then
    echo "Error: Invalid configuration. Please provide an i2Connect configuration name."
    exit 1
fi

dbDialect=${2:-${DB_DIALECT}}
if [[ $dbDialect != "sqlserver" &&  $dbDialect != "db2" ]]; then
    echo "Error: Unrecognized dialect."
    exit 1
fi

pushd ${SCRIPTS_PATH}
. updateServerConfigurations ${configModsName} ${dbDialect}
popd

output "Stopping Liberty"
docker exec -u i2analyze liberty /opt/i2/i2analyze/toolkit/scripts/setup -t stopLiberty

output "Deploying Liberty"
docker exec -u i2analyze liberty /opt/i2/i2analyze/toolkit/scripts/setup -t deployLiberty

output "Updating the Solr configuration on the ZooKeeper servers"
docker exec -u i2analyze admin_client /opt/i2/i2analyze/toolkit/scripts/setup -t createAndUploadSolrConfig --hostname admin_client.eianet

output "Creating Solr collections"
docker exec -t -u i2analyze admin_client /opt/i2/i2analyze/toolkit/scripts/setup -t createSolrCollections --hostname admin_client.eianet

contExists="$(containerExists connector)"
if [[ "$contExists" -eq 0 ]]; then
  output "Running the connector on the eia network"
  docker run -d --name connector --net eianet --memory=512m -u i2analyze connector_image
fi

output "Copying security configuration and restarting the connector container"
docker cp ${IMAGES_PATH}/common/connector/security-config.json connector:/opt/i2/i2analyze/example_connector/security-config.json

# After the connector container is restarted, the example connector starts with the SSL configuration
docker restart connector

output "Starting Liberty"
docker exec -u i2analyze liberty /opt/i2/i2analyze/toolkit/scripts/setup -t startLiberty

popd
