#!/bin/bash
# i2, i2 Group, the i2 Group logo, and i2group.com are trademarks of N.Harris Computer Corporation.
# Â© N.Harris Computer Corporation (2022-2023)
#
# SPDX short identifier: MIT

#####################################################################################
#                                                                                   #
#  Script to set up i2 Connect for use with i2 Analyze.                             #
#                                                                                   #
#  Usage : deployDaod [<configModsName>] [<dbDialect>]                              #
#  Defaults to i2connect configuration directory                                    #
#  Defaults to current database dialect                                             #
#                                                                                   #
#####################################################################################

set -e

. utils/variables

pushd ..

. ${UTILS_PATH}/functions

configModsName=${1:-i2connect}

if [[ $configModsName != "i2connect" &&  $configModsName != "i2connect_istore" ]]; then
    echo "Error: Invalid configuration. Please provide an i2Connect configuration name."
    exit 1
fi

dbDialect=${2:-${DB_DIALECT}}
if [[ $dbDialect != "sqlserver" &&  $dbDialect != "db2" &&  $dbDialect != "postgres" ]]; then
    echo "Error: Unrecognized dialect."
    exit 1
fi

pushd ${SCRIPTS_PATH}
. updateServerConfigurations ${configModsName} ${dbDialect}
popd

output "Stopping Liberty"
docker exec -u i2analyze liberty /opt/i2/i2analyze/toolkit/scripts/setup -t stopLiberty

output "Deploying Liberty"
docker exec -u i2analyze liberty /opt/i2/i2analyze/toolkit/scripts/setup -t deployLiberty

output "Updating the Solr configuration on the ZooKeeper servers"
docker exec -u i2analyze admin_client /opt/i2/i2analyze/toolkit/scripts/setup -t createAndUploadSolrConfig --hostname admin_client.eianet

output "Creating Solr collections"
docker exec -t -u i2analyze admin_client /opt/i2/i2analyze/toolkit/scripts/setup -t createSolrCollections --hostname admin_client.eianet

contExists="$(containerExists connector)"
if [[ "$contExists" -eq 0 ]]; then
    connector_args=()
    if [[ ! -f "${SRC_DIR}/keys/stores/i2-connector-key.key" || 
        ! -f "${SRC_DIR}/keys/responses/connector-key.cer" ||
        ! -f "${IMAGES_PATH}/common/ca/ca/CA.cer"
    ]]; then
        echo "ERROR: SSL certificates are missing. Please run createKeysAndStores script"
        exit 1      
    fi
    read -s -p "Passphrase: " ssl_passphrase
    output "Running the connector on the eia network"
    ssl_private_key=$(cat "${SRC_DIR}/keys/stores/i2-connector-key.key")
    ssl_certificate=$(cat "${SRC_DIR}/keys/responses/connector-key.cer")
    ssl_ca_certificate=$(cat "${IMAGES_PATH}/common/ca/ca/CA.cer")
    docker run -d --name connector --net eianet --memory=512m \
        --net-alias "connector.eianet" \
        -e "CONNECTOR_ID=example-connector" \
        -e "SSL_ENABLED=true" \
        -e "SSL_PRIVATE_KEY=${ssl_private_key}" \
        -e "SSL_CERTIFICATE=${ssl_certificate}" \
        -e "SSL_CA_CERTIFICATE=${ssl_ca_certificate}" \
        -e "SSL_PASSPHRASE=${ssl_passphrase}" \
        -e "SSL_GATEWAY_CN=liberty.eianet"  \
        -e "SSL_SERVER_PORT=3443"  \
        "connector_image"
fi

output "Starting Liberty"
docker exec -u i2analyze liberty /opt/i2/i2analyze/toolkit/scripts/setup -t startLiberty

popd
