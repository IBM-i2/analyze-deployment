#!/bin/bash
# i2, i2 Group, the i2 Group logo, and i2group.com are trademarks of N.Harris Computer Corporation.
# Â© N.Harris Computer Corporation (2022-2023)
#
# SPDX short identifier: MIT

#####################################################################################
#                                                                                   #
#  Script to reset the environment to the default configuration.                    #
#                                                                                   #
#  Usage : resetEnvironment [<dbDialect>]                                           #
#  Defaults to current database dialect                                             #
#                                                                                   #
#####################################################################################

set -e

. utils/variables

pushd ..

. ${UTILS_PATH}/functions

dbDialect=${1:-${DB_DIALECT}}

if [[ $dbDialect != "sqlserver" &&  $dbDialect != "db2" &&  $dbDialect != "postgres" ]]; then
    echo "Error: Unrecognized dialect."
    exit 1
fi

output "Remove the configuration directory on each container"
docker exec admin_client sh -c "rm -rf /opt/i2/i2analyze/toolkit/configuration/*"
docker exec liberty sh -c "rm -rf /opt/i2/i2analyze/toolkit/configuration/*"
docker exec zookeeper sh -c "rm -rf /opt/i2/i2analyze/toolkit/configuration/*"
docker exec zookeeper2 sh -c "rm -rf /opt/i2/i2analyze/toolkit/configuration/*"
docker exec zookeeper3 sh -c "rm -rf /opt/i2/i2analyze/toolkit/configuration/*"
docker exec solr sh -c "rm -rf /opt/i2/i2analyze/toolkit/configuration/*"
docker exec solr2 sh -c "rm -rf /opt/i2/i2analyze/toolkit/configuration/*"

output "Copy the configuration from the src/configuration directory to each container"
#Copy Base Config
docker cp "${BASE_CONFIG_PATH}/." admin_client:/opt/i2/i2analyze/toolkit/configuration
docker cp "${BASE_CONFIG_PATH}/." liberty:/opt/i2/i2analyze/toolkit/configuration
docker cp "${BASE_CONFIG_PATH}/." zookeeper:/opt/i2/i2analyze/toolkit/configuration
docker cp "${BASE_CONFIG_PATH}/." zookeeper2:/opt/i2/i2analyze/toolkit/configuration
docker cp "${BASE_CONFIG_PATH}/." zookeeper3:/opt/i2/i2analyze/toolkit/configuration
docker cp "${BASE_CONFIG_PATH}/." solr:/opt/i2/i2analyze/toolkit/configuration
docker cp "${BASE_CONFIG_PATH}/." solr2:/opt/i2/i2analyze/toolkit/configuration

#Reset base configuration
cp -r "${CONFIG_MODS_PATH}/${dbDialect}/base/." "${DEFAULT_CONFIG_PATH}"

#Copy Default Config
pushd ${SCRIPTS_PATH}
. copyConfiguration $dbDialect
popd
docker cp "${IMAGES_PATH}/${dbDialect}/admin_client/configuration/." admin_client:/opt/i2/i2analyze/toolkit/configuration
docker cp "${IMAGES_PATH}/${dbDialect}/liberty/configuration/." liberty:/opt/i2/i2analyze/toolkit/configuration
docker cp "${IMAGES_PATH}/common/zookeeper/configuration/." zookeeper:/opt/i2/i2analyze/toolkit/configuration
docker cp "${IMAGES_PATH}/common/zookeeper2/configuration/." zookeeper2:/opt/i2/i2analyze/toolkit/configuration
docker cp "${IMAGES_PATH}/common/zookeeper3/configuration/." zookeeper3:/opt/i2/i2analyze/toolkit/configuration
docker cp "${IMAGES_PATH}/common/solr/configuration/." solr:/opt/i2/i2analyze/toolkit/configuration
docker cp "${IMAGES_PATH}/common/solr2/configuration/." solr2:/opt/i2/i2analyze/toolkit/configuration

#Change the ownership of the copied files
docker exec -u root admin_client chown -R i2analyze:i2analyze /opt/i2/i2analyze/toolkit/configuration
docker exec -u root liberty chown -R i2analyze:i2analyze /opt/i2/i2analyze/toolkit/configuration
docker exec -u root zookeeper chown -R i2analyze:i2analyze /opt/i2/i2analyze/toolkit/configuration
docker exec -u root zookeeper2 chown -R i2analyze:i2analyze /opt/i2/i2analyze/toolkit/configuration
docker exec -u root zookeeper3 chown -R i2analyze:i2analyze /opt/i2/i2analyze/toolkit/configuration
docker exec -u root solr chown -R i2analyze:i2analyze /opt/i2/i2analyze/toolkit/configuration
docker exec -u root solr2 chown -R i2analyze:i2analyze /opt/i2/i2analyze/toolkit/configuration

# Searching and replacing ssl tag, removing clientAuthenticationSupported
docker exec -u i2analyze liberty sh -c "cd /opt/i2/i2analyze/deploy/wlp/usr/servers/opal-server && \
    sed -i 's/<ssl sslProtocol=\"TLSv1.2\" clientAuthenticationSupported=\"true\" id=\"defaultSSLConfig\"/<ssl sslProtocol=\"TLSv1.2\" id=\"defaultSSLConfig\"/g' server.xml"

# Search and replace httpDispatcher tag, removing trustedSensitiveHeaderOrigin
docker exec -u i2analyze liberty sh -c "cd /opt/i2/i2analyze/deploy/wlp/usr/servers/opal-server && \
    sed -i 's/trustedSensitiveHeaderOrigin=\"\*\"//g' server.xml"

# Resetting start extensions
docker exec -u root -it solr sh -c "echo \"/opt/i2/i2analyze/toolkit/scripts/setup -t startSolrNodes --hostname solr.eianet || echo \"Error stating Solr node in solr\"\" > /opt/i2/startupExt"
docker exec -u root -it solr2 sh -c "echo \"/opt/i2/i2analyze/toolkit/scripts/setup -t startSolrNodes --hostname solr2.eianet || echo \"Error stating Solr node in solr2\"\" > /opt/i2/startupExt"
docker exec -u root -it admin_client sh -c "echo \"\" > /opt/i2/startupExt"
docker exec -u root -it liberty sh -c "echo \"export JAVA_HOME=/opt/i2/i2analyze/deploy/java && /opt/i2/i2analyze/toolkit/scripts/setup -t startLiberty || echo \"Error starting Liberty\"\" > /opt/i2/startupExt"
docker exec -u root -it zookeeper sh -c "echo \"/opt/i2/i2analyze/toolkit/scripts/setup -t startZkHosts --hostname zookeeper.eianet || echo \"Error stating Zookeeper host in zookeeper\"\" > /opt/i2/startupExt"
docker exec -u root -it zookeeper2 sh -c "echo \"/opt/i2/i2analyze/toolkit/scripts/setup -t startZkHosts --hostname zookeeper2.eianet || echo \"Error stating Zookeeper host in zookeeper2\"\" > /opt/i2/startupExt"
docker exec -u root -it zookeeper3 sh -c "echo \"/opt/i2/i2analyze/toolkit/scripts/setup -t startZkHosts --hostname zookeeper3.eianet || echo \"Error stating Zookeeper host in zookeeper3\"\" > /opt/i2/startupExt"

output "Resetting configuration"
docker exec -u i2analyze liberty /opt/i2/i2analyze/toolkit/scripts/setup -t stopLiberty

# Resetting the Solr configuration in the Zookeeper servers
docker exec -u i2analyze admin_client /opt/i2/i2analyze/toolkit/scripts/setup -t createAndUploadSolrConfig --hostname admin_client.eianet

# Restarting zookeeper containers
docker exec -u i2analyze zookeeper /opt/i2/i2analyze/toolkit/scripts/setup -t stopZkHosts --hostname zookeeper.eianet
docker exec -u i2analyze zookeeper /opt/i2/i2analyze/toolkit/scripts/setup -t startZkHosts --hostname zookeeper.eianet

docker exec -u i2analyze zookeeper2 /opt/i2/i2analyze/toolkit/scripts/setup -t stopZkHosts --hostname zookeeper2.eianet
docker exec -u i2analyze zookeeper2 /opt/i2/i2analyze/toolkit/scripts/setup -t startZkHosts --hostname zookeeper2.eianet

docker exec -u i2analyze zookeeper3 /opt/i2/i2analyze/toolkit/scripts/setup -t stopZkHosts --hostname zookeeper3.eianet
docker exec -u i2analyze zookeeper3 /opt/i2/i2analyze/toolkit/scripts/setup -t startZkHosts --hostname zookeeper3.eianet

# Restarting solr containers
docker exec -u i2analyze solr /opt/i2/i2analyze/toolkit/scripts/setup -t stopSolrNodes --hostname solr.eianet
docker exec -u i2analyze solr2 /opt/i2/i2analyze/toolkit/scripts/setup -t stopSolrNodes --hostname solr2.eianet

docker exec -u i2analyze solr /opt/i2/i2analyze/toolkit/scripts/setup -t startSolrNodes --hostname solr.eianet
docker exec -u i2analyze solr2 /opt/i2/i2analyze/toolkit/scripts/setup -t startSolrNodes --hostname solr2.eianet

case "${dbDialect}" in
  "db2")
    # Resetting the DB2COMM property in the db2 server
    docker exec -u db2inst1 -t db2 bash -c ". /home/db2inst1/sqllib/db2profile && db2set DB2COMM=tcpip"
    # Resetting the SSL_VERSIONS property in the db2 server
    docker exec -u db2inst1 -t db2 bash -c ". /home/db2inst1/sqllib/db2profile && db2 update dbm cfg using SSL_VERSIONS NULL"

    # Recataloging the database on the admin_client container
    docker exec -u i2analyze admin_client bash -c ". /home/db2inst1/sqllib/db2profile && /opt/i2/i2analyze/toolkit/scripts/setup -t recatalogRemoteDB2Nodes"
    docker exec -u i2analyze admin_client bash -c ". /home/db2inst1/sqllib/db2profile && /opt/i2/i2analyze/toolkit/scripts/setup -t recatalogDB2Databases"

    # Recataloging the database on the liberty container
    docker exec -u i2analyze liberty bash -c ". /home/db2inst1/sqllib/db2profile && /opt/i2/i2analyze/toolkit/scripts/setup -t recatalogRemoteDB2Nodes"
    docker exec -u i2analyze liberty bash -c ". /home/db2inst1/sqllib/db2profile && /opt/i2/i2analyze/toolkit/scripts/setup -t recatalogDB2Databases"
    ;;
  "sqlserver")
    # Resetting the connection properties in the sqlserver server
    docker exec -t sqlserver /opt/mssql/bin/mssql-conf unset network.tlscert
    docker exec -t sqlserver /opt/mssql/bin/mssql-conf unset network.tlskey
    docker exec -t sqlserver /opt/mssql/bin/mssql-conf unset network.tlsprotocols
    docker exec -t sqlserver /opt/mssql/bin/mssql-conf unset network.forceencryption
    ;;
  "postgres")
    # Resetting the connection properties in the postgres server
    docker exec -u postgres postgres sed -i "s/ssl = on/#ssl = off/"  /var/lib/postgresql/data/postgresql.conf
    docker exec -u postgres postgres sed -i "s/ssl_cert_file = '\/opt\/i2\/keys\/responses\/postgres-key.cer'/#ssl_cert_file = 'server.crt'/"  /var/lib/postgresql/data/postgresql.conf
    docker exec -u postgres postgres sed -i "s/ssl_key_file = '\/opt\/i2\/keys\/stores\/i2-postgres-key.key'/#ssl_key_file = 'server.key'/"  /var/lib/postgresql/data/postgresql.conf
    ;;
esac

# Deploying liberty
docker exec -u i2analyze liberty /opt/i2/i2analyze/toolkit/scripts/setup -t deployLiberty

case "${dbDialect}" in
  "db2")
    # Restart db2
    docker exec -u db2inst1 -t db2 bash -c ". /home/db2inst1/sqllib/db2profile && db2stop"
    docker exec -u db2inst1 -t db2 bash -c ". /home/db2inst1/sqllib/db2profile && db2start"
    ;;
  "sqlserver")
    # Restart sqlserver
    docker restart sqlserver
    ;;
  "postgres")
    # Restart postgres
    docker restart postgres
    ;;
esac

# Starting liberty
docker exec -u i2analyze liberty /opt/i2/i2analyze/toolkit/scripts/setup -t startLiberty

popd
