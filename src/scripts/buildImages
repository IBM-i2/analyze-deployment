#!/bin/bash
# i2, i2 Group, the i2 Group logo, and i2group.com are trademarks of N.Harris Computer Corporation.
# Â© N.Harris Computer Corporation (2022-2023)
#
# SPDX short identifier: MIT

#####################################################################################
#                                                                                   #
#  Script to build the basic images.                                                #
#                                                                                   #
#  Usage : buildImages                                                              #
#                                                                                   #
#####################################################################################

set -e

. utils/variables

pushd ..

. ${UTILS_PATH}/functions

if [ ! -e "${IMAGES_PATH}/common/ubuntu_toolkit/i2analyze/i2analyze.tar.gz" ]; then
    echo "Error: Cannot find the i2analyze.tar.gz file in '${IMAGES_PATH}/common/ubuntu_toolkit/i2analyze'."
    exit 1
fi

cp -r "${CONFIG_MODS_PATH}/sqlserver/base/." "${DEFAULT_CONFIG_PATH}"

pushd ${SCRIPTS_PATH}
. copyConfiguration
popd

header "Building the deployment example images"

output "Building ubuntu_toolkit_image"
docker build -t ubuntu_toolkit_image ${IMAGES_PATH}/common/ubuntu_toolkit

output "Building sqlserver_image"
docker build -t sqlserver_image ${IMAGES_PATH}/sqlserver/sqlserver

output "Building liberty_image"
docker build -t liberty_sqlserver_image ${IMAGES_PATH}/sqlserver/liberty
output "Building admin_client_image"
docker build -t admin_client_sqlserver_image ${IMAGES_PATH}/sqlserver/admin_client

output "Building zookeeper_image"
docker build -t zookeeper_image ${IMAGES_PATH}/common/zookeeper
output "Building zookeeper2_image"
docker build -t zookeeper2_image ${IMAGES_PATH}/common/zookeeper2
output "Building zookeeper3_image"
docker build -t zookeeper3_image ${IMAGES_PATH}/common/zookeeper3
output "Building solr_image"
docker build -t solr_image ${IMAGES_PATH}/common/solr
output "Building solr2_image"
docker build -t solr2_image ${IMAGES_PATH}/common/solr2

output "Building etl_client_image"
docker build -t etl_client_sqlserver_image ${IMAGES_PATH}/sqlserver/etl_client
output "Building connector_image"

pushd "${IMAGES_PATH}/common/connector"
rm -rf "./app"
mkdir "./app"
npm pack @i2analyze/example-connector
tar_file_name=$(find -L "." -maxdepth 1 -name "*.tgz" -type f -print0)
tar -zxf "${tar_file_name}" --strip-components=1 -C "./app"
rm "${tar_file_name}"
popd
docker build -t connector_image "${IMAGES_PATH}/common/connector"

popd
