#!/bin/bash
# MIT License
#
# Copyright (c) 2022, N. Harris Computer Corporation
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

#####################################################################################
#                                                                                   #
#  Script to build the basic images.                                                #
#                                                                                   #
#  Usage : buildImages                                                              #
#                                                                                   #
#####################################################################################

set -e

. utils/variables

pushd ..

. ${UTILS_PATH}/functions

if [ ! -e "${IMAGES_PATH}/common/ubuntu_toolkit/i2analyze/i2analyze.tar.gz" ]; then
    echo "Error: Cannot find the i2analyze.tar.gz file in '${IMAGES_PATH}/common/ubuntu_toolkit/i2analyze'."
    exit 1
fi

cp -r "${CONFIG_MODS_PATH}/sqlserver/base/." "${DEFAULT_CONFIG_PATH}"

pushd ${SCRIPTS_PATH}
. copyConfiguration
popd

header "Building the deployment example images"

output "Building ubuntu_toolkit_image"
docker build -t ubuntu_toolkit_image ${IMAGES_PATH}/common/ubuntu_toolkit

output "Building sqlserver_image"
docker build -t sqlserver_image ${IMAGES_PATH}/sqlserver/sqlserver

output "Building liberty_image"
docker build -t liberty_sqlserver_image ${IMAGES_PATH}/sqlserver/liberty
output "Building admin_client_image"
docker build -t admin_client_sqlserver_image ${IMAGES_PATH}/sqlserver/admin_client

output "Building zookeeper_image"
docker build -t zookeeper_image ${IMAGES_PATH}/common/zookeeper
output "Building zookeeper2_image"
docker build -t zookeeper2_image ${IMAGES_PATH}/common/zookeeper2
output "Building zookeeper3_image"
docker build -t zookeeper3_image ${IMAGES_PATH}/common/zookeeper3
output "Building solr_image"
docker build -t solr_image ${IMAGES_PATH}/common/solr
output "Building solr2_image"
docker build -t solr2_image ${IMAGES_PATH}/common/solr2

output "Building etl_client_image"
docker build -t etl_client_sqlserver_image ${IMAGES_PATH}/sqlserver/etl_client
output "Building connector_image"
docker build -t connector_image ${IMAGES_PATH}/common/connector

if [ -e "${IMAGES_PATH}/common/ihs_base/IHS_ARCHIVE_FILE.zip" ]; then
  output "Building base_ihs_image"
  docker build -t base_ihs_image ${IMAGES_PATH}/common/ihs_base --build-arg IHS_ARCHIVE_FILE=IHS_ARCHIVE_FILE.zip
  output "Building ihs_image"
  docker build -t ihs_image ${IMAGES_PATH}/common/ihs
fi

popd
