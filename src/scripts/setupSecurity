#!/bin/bash
# i2, i2 Group, the i2 Group logo, and i2group.com are trademarks of N.Harris Computer Corporation.
# Â© N.Harris Computer Corporation (2022)
#
# SPDX short identifier: MIT

#####################################################################################
#                                                                                   #
#  Script to deploy a complete SSL deployment of i2 Analyze.                        #
#                                                                                   #
#  Usage : setupSecurity [<configurationDir>] [<dbDialect>]                         #
#  Defaults to ssl configuration directory                                          #
#  Defaults to current  database dialect                                            #
#                                                                                   #
#####################################################################################

set -e

. utils/variables

pushd ..

. ${UTILS_PATH}/functions

configurationDir=${1:-ssl}

if [[ $configurationDir != "client_cert_ssl" &&  $configurationDir != "ssl" &&  $configurationDir != "ihs_ssl" ]]; then
    echo "Error: Invalid configuration. Please provide an SSL configuration name."
    exit 1
fi

dbDialect=${2:-${DB_DIALECT}}
if [[ $dbDialect != "sqlserver" &&  $dbDialect != "db2" &&  $dbDialect != "postgres" ]]; then
    echo "Error: Unrecognized dialect."
    exit 1
fi

output "Stopping Liberty"
docker exec -u i2analyze    liberty     /opt/i2/i2analyze/toolkit/scripts/setup -t stopLiberty

if [ "$(docker ps -q -f name=ihs)" ]; then
    output "Stopping IBM HTTPServer"
    docker exec -u root ihs bash -c "/opt/IBM/HTTPServer/bin/apachectl stop"
    echo "IBM HTTPServer has stopped"
fi

# TODO Remove - switching protocol in Solr supported in next release.
output "Deleting Solr Collections"
docker exec -u i2analyze admin_client /opt/i2/i2analyze/toolkit/scripts/setup -t deleteSolrCollections -f --all --hostname admin_client.eianet

output "Stopping Solr and Zookeeper"
docker exec -u i2analyze    solr        /opt/i2/i2analyze/toolkit/scripts/setup -t stopSolrNodes   --hostname solr.eianet
docker exec -u i2analyze    solr2       /opt/i2/i2analyze/toolkit/scripts/setup -t stopSolrNodes   --hostname solr2.eianet
docker exec -u i2analyze    zookeeper   /opt/i2/i2analyze/toolkit/scripts/setup -t stopZkHosts     --hostname zookeeper.eianet
docker exec -u i2analyze    zookeeper2  /opt/i2/i2analyze/toolkit/scripts/setup -t stopZkHosts     --hostname zookeeper2.eianet
docker exec -u i2analyze    zookeeper3  /opt/i2/i2analyze/toolkit/scripts/setup -t stopZkHosts     --hostname zookeeper3.eianet

pushd ${SCRIPTS_PATH}
. updateServerConfigurations $configurationDir $dbDialect
popd

header "Enabling SSL on all servers"

output "Deploying Liberty"
docker exec -u i2analyze liberty /opt/i2/i2analyze/toolkit/scripts/setup -t deployLiberty

if [[ $configurationDir == "client_cert_ssl" ]]; then
    # Search and replace ssl tag, adding clientAuthenticationSupported
    docker exec -u i2analyze liberty sh -c "cd /opt/i2/i2analyze/deploy/wlp/usr/servers/opal-server && \
    sed -i 's/<ssl sslProtocol=\"TLSv1.2\" id=\"defaultSSLConfig\"/<ssl sslProtocol=\"TLSv1.2\" clientAuthenticationSupported=\"true\" id=\"defaultSSLConfig\"/g' server.xml"
    # Search and replace httpDispatcher tag, adding trustedSensitiveHeaderOrigin
    docker exec -u i2analyze liberty sh -c "cd /opt/i2/i2analyze/deploy/wlp/usr/servers/opal-server && \
    sed -i 's/<httpDispatcher enableWelcomePage=\"false\"/<httpDispatcher enableWelcomePage=\"false\" trustedSensitiveHeaderOrigin=\"*\"/g' server.xml"
fi

case "${dbDialect}" in
  "db2")
    output "Updating the DB2 configuration"
    docker exec -u db2inst1 -t db2 bash -c ". /home/db2inst1/sqllib/db2profile && db2set DB2COMM=ssl"
    docker exec -u db2inst1 -t db2 bash -c ". /home/db2inst1/sqllib/db2profile && db2 update dbm cfg using SSL_VERSIONS TLSv12"

    output "Restarting the Database"
    docker exec -u db2inst1 -t db2 bash -c ". /home/db2inst1/sqllib/db2profile && db2stop"
    docker exec -u db2inst1 -t db2 bash -c ". /home/db2inst1/sqllib/db2profile && db2start"

    # Configure clients
    docker exec -u db2inst1 -t liberty      bash -c ". /home/db2inst1/sqllib/db2profile && db2 update dbm cfg using SSL_CLNT_KEYDB /opt/i2/keys/stores/i2-db2-truststore.kdb SSL_CLNT_STASH /opt/i2/keys/stores/i2-db2-truststore.sth"
    docker exec -u db2inst1 -t admin_client bash -c ". /home/db2inst1/sqllib/db2profile && db2 update dbm cfg using SSL_CLNT_KEYDB /opt/i2/keys/stores/i2-db2-truststore.kdb SSL_CLNT_STASH /opt/i2/keys/stores/i2-db2-truststore.sth"
    if [ "$(docker ps -q -f name=etl_client)" ]; then
      docker exec -u db2inst1 -t etl_client   bash -c ". /home/db2inst1/sqllib/db2profile && db2 update dbm cfg using SSL_CLNT_KEYDB /opt/i2/keys/stores/i2-db2-truststore.kdb SSL_CLNT_STASH /opt/i2/keys/stores/i2-db2-truststore.sth"
    fi
    output "Recataloging the database on the admin_client container"
    docker exec -u i2analyze admin_client bash -c ". /home/db2inst1/sqllib/db2profile && /opt/i2/i2analyze/toolkit/scripts/setup -t recatalogRemoteDB2Nodes"
    docker exec -u i2analyze admin_client bash -c ". /home/db2inst1/sqllib/db2profile && /opt/i2/i2analyze/toolkit/scripts/setup -t recatalogDB2Databases"

    output "Recataloging the database on the liberty container"
    docker exec -u i2analyze liberty bash -c ". /home/db2inst1/sqllib/db2profile && /opt/i2/i2analyze/toolkit/scripts/setup -t recatalogRemoteDB2Nodes"
    docker exec -u i2analyze liberty bash -c ". /home/db2inst1/sqllib/db2profile && /opt/i2/i2analyze/toolkit/scripts/setup -t recatalogDB2Databases"
    ;;
  "sqlserver")
    output "Enabling Sql Server secure connection"
    docker exec -t sqlserver /opt/mssql/bin/mssql-conf set network.tlscert /opt/i2/keys/responses/sqlserver-key.cer
    docker exec -t sqlserver /opt/mssql/bin/mssql-conf set network.tlskey /opt/i2/keys/stores/i2-sqlserver-key.key
    docker exec -t sqlserver /opt/mssql/bin/mssql-conf set network.tlsprotocols 1.2
    docker exec -t sqlserver /opt/mssql/bin/mssql-conf set network.forceencryption 1

    output "Restarting the Database"
    docker stop sqlserver
    docker start sqlserver

    # Configure clients
    docker cp "${IMAGES_PATH}/common/ca/ca/CA.cer" liberty:/usr/share/ca-certificates/CA.cer
    docker exec -u root liberty      bash -c "grep -q \"CA.cer\" /etc/ca-certificates.conf || echo \"CA.cer\" >> /etc/ca-certificates.conf"
    docker exec -u root -t liberty      update-ca-certificates

    docker cp "${IMAGES_PATH}/common/ca/ca/CA.cer" admin_client:/usr/share/ca-certificates/CA.cer
    docker exec -u root admin_client bash -c "grep -q \"CA.cer\" /etc/ca-certificates.conf || echo \"CA.cer\" >> /etc/ca-certificates.conf"
    docker exec -u root -t admin_client update-ca-certificates

    if [ "$(docker ps -q -f name=etl_client)" ]; then
      docker cp "${IMAGES_PATH}/common/ca/ca/CA.cer" etl_client:/usr/share/ca-certificates/CA.cer
      docker exec -u root etl_client   bash -c "grep -q \"CA.cer\" /etc/ca-certificates.conf || echo \"CA.cer\" >> /etc/ca-certificates.conf"
      docker exec -u root -t etl_client   update-ca-certificates
    fi
    ;;
  "postgres")
    output "Enabling PostGreSQL secure connection"
    docker exec -u postgres postgres sed -i "s/#ssl = off/ssl = on/"  /var/lib/postgresql/data/postgresql.conf
    docker exec -u postgres postgres sed -i "s/#ssl_cert_file = 'server.crt'/ssl_cert_file = '\/opt\/i2\/keys\/responses\/postgres-key.cer'/"  /var/lib/postgresql/data/postgresql.conf
    docker exec -u postgres postgres sed -i "s/#ssl_key_file = 'server.key'/ssl_key_file = '\/opt\/i2\/keys\/stores\/i2-postgres-key.key'/"  /var/lib/postgresql/data/postgresql.conf

    # TODO Look at these permissions again
    docker exec -u root postgres chmod -R 770 /opt/i2/keys/
    docker exec -u root postgres chmod 600 /opt/i2/keys/stores/i2-postgres-key.key
    docker exec -u root postgres chmod 600 /opt/i2/keys/responses/postgres-key.cer
    docker exec -u root postgres chown -R postgres:root /opt/i2/keys/

    output "Restarting the Database"
    docker stop postgres
    docker start postgres
    ;;
esac

output "Updating the ZooKeeper configuration on the Zookeeper servers"
docker exec -u i2analyze    zookeeper    /opt/i2/i2analyze/toolkit/scripts/setup -t createZkHosts   --hostname zookeeper.eianet
docker exec -u i2analyze    zookeeper2   /opt/i2/i2analyze/toolkit/scripts/setup -t createZkHosts   --hostname zookeeper2.eianet
docker exec -u i2analyze    zookeeper3   /opt/i2/i2analyze/toolkit/scripts/setup -t createZkHosts   --hostname zookeeper3.eianet
docker exec -u i2analyze    zookeeper    /opt/i2/i2analyze/toolkit/scripts/setup -t startZkHosts    --hostname zookeeper.eianet
docker exec -u i2analyze    zookeeper2   /opt/i2/i2analyze/toolkit/scripts/setup -t startZkHosts    --hostname zookeeper2.eianet
docker exec -u i2analyze    zookeeper3   /opt/i2/i2analyze/toolkit/scripts/setup -t startZkHosts    --hostname zookeeper3.eianet

output "Updating the Solr configuration on the ZooKeeper servers"
docker exec -u i2analyze admin_client /opt/i2/i2analyze/toolkit/scripts/setup -t createAndUploadSolrConfig --hostname admin_client.eianet

output "Starting Solr"
docker exec -u i2analyze    solr         /opt/i2/i2analyze/toolkit/scripts/setup -t startSolrNodes --hostname solr.eianet
docker exec -u i2analyze    solr2        /opt/i2/i2analyze/toolkit/scripts/setup -t startSolrNodes --hostname solr2.eianet

output "Creating Solr Collections"
docker exec -u i2analyze admin_client /opt/i2/i2analyze/toolkit/scripts/setup -t createSolrCollections --all --hostname admin_client.eianet

if [[ $configurationDir == "ihs_ssl" || $configurationDir == "client_cert_ssl" ]]; then
    output "Updating the HTTP Server configuration"
    docker exec -it ihs /opt/i2/i2analyze/toolkit/scripts/setup -t configureHttpServer
    docker exec -u root ihs bash -c "cp /opt/i2/i2analyze/toolkit/configuration/plugin-cfg.xml /opt/IBM/HTTPServer/plugins/iap/config/plugin-cfg.xml &>/dev/null || true"
fi

if [ "$(docker ps -q -f name=ihs)" ]; then
    output "Starting IBM HTTPServer"
    docker exec -u root ihs bash -c "/opt/IBM/HTTPServer/bin/apachectl start"
    echo "IBM HTTPServer has started"
fi

output "Starting Liberty"
docker exec -u i2analyze    liberty     /opt/i2/i2analyze/toolkit/scripts/setup -t startLiberty


popd

