#!/bin/bash
# MIT License
#
# Copyright (c) 2022, N. Harris Computer Corporation
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

#####################################################################################
#                                                                                   #
#  Script to set up the etl_client for use and to ingest example data.              #
#                                                                                   #
#  Usage : deployEtlClient                                                          #
#                                                                                   #
#####################################################################################

set -e

. utils/variables

pushd ..

. ${UTILS_PATH}/functions

dbDialect=${1:-${DB_DIALECT}}

if [[ $dbDialect != "sqlserver" &&  $dbDialect != "db2" ]]; then
    echo "Error: Unrecognized dialect."
    exit 1
fi

output "Removing old etltoolkit from etl_client and admin_client if exists"
docker exec -u i2analyze etl_client rm -Rf /opt/IBM/i2analyze/etltoolkit
docker exec -u i2analyze admin_client rm -Rf /opt/IBM/i2analyze/etltoolkit

output "Creating an etltoolkit and moving it to the etl_client container"
docker exec -u i2analyze admin_client /opt/IBM/i2analyze/toolkit/scripts/setup -t createEtlToolkit -p outputPath='/opt/IBM/i2analyze'

rm -rf etltoolkit &>/dev/null || true
docker cp admin_client:/opt/IBM/i2analyze/etltoolkit ./
docker exec -u i2analyze admin_client rm -Rf /opt/IBM/i2analyze/etltoolkit

docker cp ./etltoolkit etl_client:/opt/IBM/i2analyze/etltoolkit
rm -rf etltoolkit &>/dev/null || true

if [[ $dbDialect == "sqlserver" ]]; then
    docker exec -u root etl_client chown -R i2analyze:i2analyze /opt/IBM/i2analyze/
else
    docker exec -u root etl_client chown -R i2analyze:db2iusr1 /opt/IBM/i2analyze/
fi

popd
